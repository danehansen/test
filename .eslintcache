[{"/Users/danehansen/Desktop/endpoint/src/index.js":"1","/Users/danehansen/Desktop/endpoint/src/App/App.js":"2","/Users/danehansen/Desktop/endpoint/src/App/Card/Card.js":"3","/Users/danehansen/Desktop/endpoint/src/App/getData.js":"4","/Users/danehansen/Desktop/endpoint/src/App/Toggle/Toggle.js":"5","/Users/danehansen/Desktop/endpoint/src/App/CardHolder/CardHolder.js":"6"},{"size":201,"mtime":1610088109541,"results":"7","hashOfConfig":"8"},{"size":945,"mtime":1610131947698,"results":"9","hashOfConfig":"8"},{"size":1269,"mtime":1610130977900,"results":"10","hashOfConfig":"8"},{"size":1754,"mtime":1610094018713,"results":"11","hashOfConfig":"8"},{"size":358,"mtime":1610092921240,"results":"12","hashOfConfig":"8"},{"size":249,"mtime":1610092858979,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"webxlk",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/danehansen/Desktop/endpoint/src/index.js",[],["28","29"],"/Users/danehansen/Desktop/endpoint/src/App/App.js",[],"/Users/danehansen/Desktop/endpoint/src/App/Card/Card.js",[],"/Users/danehansen/Desktop/endpoint/src/App/getData.js",["30"],"import { random, randomItem } from '@danehansen/math';\nimport sharedStyles from '../styles/shared.module.scss';\n\n// this entire file is producing randomized simulated data\n\n// calculating the max size image we need\nconst CARD_IMG_HEIGHT = parseInt(sharedStyles.cardImgHeight);\nconst CARD_IMG_MAX_WIDTH = parseInt(sharedStyles.cardWidth) * 2 + parseInt(sharedStyles.cardGap) - 1;\n\nfunction generateRandomWords(num) {\n  const words = [];\n\n  for (let i = 0; i < num; i++) {\n    words.push(generateRandomWord());\n  }\n\n  return words.join(' ');\n}\n\nfunction generateRandomWord() {\n  let str = '';\n  const consonants = 'bcdfghjklmnpqrstvwxz';\n  const vowels = 'aeiou';\n  const length = random(1, 10, true, 2);\n  // randomly choose to begin with consonant vs vowel\n  const offset = Math.round(Math.random());\n\n  for(let i = 0; i < length; i++) {\n    if ((i + offset) % 2) {\n      str += randomItem(vowels);\n    } else {\n      str += randomItem(consonants);\n    }\n\n    if (i === 0) {\n      str = str.toUpperCase();\n    }\n  }\n\n  return str;\n}\n\nfunction generateRandomObject() {\n  const id = Math.round(Math.random()* 899999999)+ 100000000;\n\n  return {\n    author: generateRandomWords(2),\n    id,\n    src: `https://picsum.photos/${CARD_IMG_MAX_WIDTH}/${CARD_IMG_HEIGHT}?random=${id}`,\n    subtitle: generateRandomWords(random(4, 6, true)),\n    title: generateRandomWords(random(2, 4, true)),\n    url: `https://${generateRandomWord().toLowerCase()}.com`,\n  };\n}\n\nexport default function getData(num) {\n  const datas = [];\n\n  for (let i = 0; i < num; i++) {\n    let obj;\n\n    // make sure theres no duplicate ids\n    do {\n      obj = generateRandomObject();\n    } while (datas.find(function({id}) {return id === obj.id}))\n\n    datas.push(obj);\n  }\n\n  return datas;\n}\n","/Users/danehansen/Desktop/endpoint/src/App/Toggle/Toggle.js",[],"/Users/danehansen/Desktop/endpoint/src/App/CardHolder/CardHolder.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":65,"column":25,"nodeType":"37","messageId":"38","endLine":65,"endColumn":62},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'obj'.","FunctionExpression","unsafeRefs","no-global-assign","no-unsafe-negation"]