{"version":3,"sources":["App/Card/Card.module.scss","App/App.module.scss","styles/shared.module.scss","App/Toggle/Toggle.module.scss","styles/colors.module.scss","App/CardHolder/CardHolder.module.scss","App/Card/Card.js","App/CardHolder/CardHolder.js","App/getData.js","App/Toggle/Toggle.js","App/App.js","index.js"],"names":["module","exports","Card","author","darkmode","id","src","subtitle","title","url","useState","loaded","setLoaded","useEffect","img","Image","addEventListener","className","classnames","styles","root","top","alt","bottom","attributes","key","value","link","href","CardHolder","children","CARD_IMG_HEIGHT","parseInt","sharedStyles","cardImgHeight","CARD_IMG_MAX_WIDTH","cardWidth","cardGap","generateRandomWords","num","words","i","push","generateRandomWord","join","str","length","random","offset","Math","round","randomItem","toUpperCase","generateRandomObject","toLowerCase","Toggle","rest","type","DARK","colorStyles","black000","LIGHT","gray097","DATA","datas","obj","find","getData","App","setDarkmode","header","label","checked","onChange","target","document","body","style","background","map","data","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d69412e5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"black000\":\"#000\",\"gray097\":\"#f4f5f7\",\"cardGap\":\"32px\",\"cardImgHeight\":\"112px\",\"cardWidth\":\"280px\",\"root\":\"Card_root__3S1zR\",\"img\":\"Card_img__lHeF0\",\"darkmode\":\"Card_darkmode__2T9pe\",\"link\":\"Card_link__1VKcr\",\"top\":\"Card_top__2vn2f\",\"loaded\":\"Card_loaded__39E8l\",\"bottom\":\"Card_bottom__1KZwV\",\"title\":\"Card_title__V_isj\",\"subtitle\":\"Card_subtitle__3oAzI\",\"attributes\":\"Card_attributes__1lMn3\",\"key\":\"Card_key__t12l3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"black000\":\"#000\",\"gray097\":\"#f4f5f7\",\"cardGap\":\"32px\",\"cardImgHeight\":\"112px\",\"cardWidth\":\"280px\",\"root\":\"App_root__nWMuC\",\"darkmode\":\"App_darkmode__1Y2E8\",\"header\":\"App_header__1Xt5M\",\"label\":\"App_label__1QbUI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardGap\":\"32px\",\"cardImgHeight\":\"112px\",\"cardWidth\":\"280px\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"black000\":\"#000\",\"gray097\":\"#f4f5f7\",\"root\":\"Toggle_root__jncxl\",\"darkmode\":\"Toggle_darkmode__MBG8i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"black000\":\"#000\",\"gray097\":\"#f4f5f7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardGap\":\"32px\",\"cardImgHeight\":\"112px\",\"cardWidth\":\"280px\",\"root\":\"CardHolder_root__Jmra5\"};","import classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport styles from './Card.module.scss';\nimport {useState, useEffect} from 'react';\n\nexport default function Card({ author, darkmode, id, src, subtitle, title, url }) {\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    const img = new Image();\n    img.addEventListener('load', function(){setLoaded(true)});\n    img.src = src;\n  });\n\n  return (\n    <div className={classnames(styles.root, darkmode && styles.darkmode)}>\n      <div className={styles.top}>\n        <img className={classnames(styles.img, loaded && styles.loaded)} src={src} alt={title} />\n      </div>\n      <div className={styles.bottom}>\n        <h3 className={styles.title}>{title}</h3>\n        <p className={styles.subtitle}>{subtitle}</p>\n        <dl className={styles.attributes}>\n          <dt className={styles.key}>Author</dt>\n          <dd className={styles.value}>{author}</dd>\n          <dt className={styles.key}>ID</dt>\n          <dd className={styles.value}>{id}</dd>\n          <dt className={styles.key}>URL</dt>\n          <dd className={styles.value}>\n            <a className={styles.link} href={url}>{url}</a>\n          </dd>\n        </dl>\n      </div>\n    </div>\n  );\n}\n\nCard.propTypes = {\n  author: PropTypes.string.isRequired,\n  darkmode: PropTypes.bool.isRequired,\n  id: PropTypes.number.isRequired,\n  src: PropTypes.string.isRequired,\n  subtitle: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n};\n","import styles from './CardHolder.module.scss';\nimport PropTypes from 'prop-types';\n\nexport default function CardHolder({children}) {\n  return <div className={styles.root} >{children}</div>;\n}\n\nCardHolder.propTypes = {\n  children: PropTypes.node,\n};\n","import { random, randomItem } from '@danehansen/math';\nimport sharedStyles from 'styles/shared.module.scss';\n\n// this entire file is producing randomized simulated data\n\n// calculating the max size image we need\nconst CARD_IMG_HEIGHT = parseInt(sharedStyles.cardImgHeight);\nconst CARD_IMG_MAX_WIDTH = parseInt(sharedStyles.cardWidth) * 2 + parseInt(sharedStyles.cardGap) - 1;\n\nfunction generateRandomWords(num) {\n  const words = [];\n\n  for (let i = 0; i < num; i++) {\n    words.push(generateRandomWord());\n  }\n\n  return words.join(' ');\n}\n\nfunction generateRandomWord() {\n  let str = '';\n  const consonants = 'bcdfghjklmnpqrstvwxz';\n  const vowels = 'aeiou';\n  const length = random(1, 10, true, 2);\n  // randomly choose to begin with consonant vs vowel\n  const offset = Math.round(Math.random());\n\n  for(let i = 0; i < length; i++) {\n    if ((i + offset) % 2) {\n      str += randomItem(vowels);\n    } else {\n      str += randomItem(consonants);\n    }\n\n    if (i === 0) {\n      str = str.toUpperCase();\n    }\n  }\n\n  return str;\n}\n\nfunction generateRandomObject() {\n  const id = Math.round(Math.random()* 899999999)+ 100000000;\n\n  return {\n    author: generateRandomWords(2),\n    id,\n    src: `https://picsum.photos/${CARD_IMG_MAX_WIDTH}/${CARD_IMG_HEIGHT}?random=${id}`,\n    subtitle: generateRandomWords(random(4, 6, true)),\n    title: generateRandomWords(random(2, 4, true)),\n    url: `https://${generateRandomWord().toLowerCase()}.com`,\n  };\n}\n\nexport default function getData(num) {\n  const datas = [];\n\n  for (let i = 0; i < num; i++) {\n    let obj;\n\n    // make sure theres no duplicate ids\n    do {\n      obj = generateRandomObject();\n    } while (datas.find(function({id}) {return id === obj.id}))\n\n    datas.push(obj);\n  }\n\n  return datas;\n}\n","import classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport styles from './Toggle.module.scss';\n\nexport default function Toggle({darkmode, ...rest}) {\n  return (\n    <input className={classnames(styles.root, darkmode && styles.darkmode)} type=\"checkbox\" {...rest} />\n  );\n}\n\nToggle.propTypes = {\n  darkmode: PropTypes.bool.isRequired,\n};\n","import Card from './Card/Card';\nimport CardHolder from './CardHolder/CardHolder';\nimport classnames from 'classnames';\nimport getData from './getData';\nimport styles from './App.module.scss';\nimport Toggle from './Toggle/Toggle';\nimport { useState } from 'react';\nimport colorStyles from 'styles/colors.module.scss';\n\nconst DARK = colorStyles.black000;\nconst LIGHT = colorStyles.gray097;\n\n// add as many cards as you would like here\nconst DATA = getData(10);\n\nexport default function App() {\n  const [darkmode, setDarkmode] = useState(false);\n\n  return (\n    <div className={classnames(styles.root, darkmode && styles.darkmode)}>\n      <div className={styles.header}>\n        <label className={styles.label}>\n          darkmode\n          <Toggle checked={darkmode} darkmode={darkmode} onChange={function({target: {checked}}){\n            document.body.style.background = checked ? DARK : LIGHT\n            setDarkmode(checked);\n          }} />\n        </label>\n      </div>\n      <CardHolder>\n        {DATA.map(function(data) {\n          return <Card {...data} darkmode={darkmode} key={data.id} />;\n        })}\n      </CardHolder>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}